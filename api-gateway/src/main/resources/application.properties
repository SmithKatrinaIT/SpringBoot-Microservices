# SERVICE ID for uses the Eureka Registry
spring.application.name=API-GATEWAY

server.port=9191

################################## EUREKA NETFLIX LIBRARY PROPERTIES FOR EUREKA SERVER & CLIENT ###################################
# Eureka server (aka Discovery Server) microservices register into the server; server holds the all applications port & IP address
# -- ONE App service ID (spring.application.name property) is associated with the application to handle multiple running instances and/or
# -- load balancing config.
# -- NOTE: Eureka Registry Server (service) must be running to test/use the applications and/or API Gateway registered to it
#       -- API Gateway (spring-cloud-starter-gateway library) uses Service Registry (Eureka Server) for load balancing (lb);
#          -- gateway has a built-in Netty load balancing server
#
# Routes: allow the API Gateway to route client requests to the appropriete application where Load Balancing is used or not
# -- Two Methods for configuring Routes:  Manual and Automatic routing
#       -- Method 1: Manual - configure each and every Eureka registered microservice route.id, route.uri, and route.predicate property
#          -- uri - can configure the load balance uri (lb://<serviceID> or full uri (http://<dns>:<port>)
#          -- Configure API predicates -- the REST API path
#          -- '**' - indicates (wildcard) REST Endpoint can be called after the base uri [i.e /api/employees/1]
#          -- Widely used due to its easy of understanding as it clearly outlines the routes configured
#       -- Method 2: Automatic - Enable Gateway Discovery Locator; by default is is FALSE
#          -- Under the Spring Cloud API you find the Cloud Gateway Configuration properties that replace the manual configuration properties
#          -- When using this method - must include the 'serviceID' in the url to access the REST API endpoints/microservices
#             -- i.e. http://localhost:9191/employee-service/api/employees/2
#                     http://ipAddress:gatewayPort/seriveID/APIEndpoint...
#             -- thus the spring.cloud.gateway.discovery.locator.lower-case-service-id property is used and set to true

# Eureka Server URL
eureka.instance.client.serverUrl.defaultZone=http://localhost:8761/eureka/

## METHOD 1: MANUAL CONFIG
# Routes for Employee Service
spring.cloud.gateway.routes[0].id=EMPLOYEE-SERVICE
spring.cloud.gateway.routes[0].uri=lb://EMPLOYEE-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/employees/**
#
# Routes for Department Service
spring.cloud.gateway.routes[1].id=DEPARTMENT-SERVICE
spring.cloud.gateway.routes[1].uri=lb://DEPARTMENT-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/departments/**

### METHOD 2: AUTOMATIC CONFIG
#spring.cloud.gateway.discovery.locator.enabled=true
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true
## added for development purposes only
#logging.level.org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping=DEBUG